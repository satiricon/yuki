parameters:
  ffmpeg_bin: '/usr/bin/ffmpeg'
  ffprobe_bin: '/usr/bin/ffprobe'
  metadata_resolve:
    - { regex: '/album_artist/i', value: 'artist' }
  yuki.saver.song.extensions: ['flac', 'mp3', 'wav', 'aac', 'ape', 'alac']

services:
  ffmpeg:
    class: FFMpeg\FFMpeg
    factory: ['FFMpeg\FFMpeg', create]
    arguments:
      - { ffmpeg.binaries: '%ffmpeg_bin%', ffprobe.binaries: '%ffprobe_bin%'}
  ffprobe:
    class: FFMpeg\FFProbe
    factory: 'ffmpeg:getFFProbe'
  yuki.media_storage:
    class: \Drupal\Core\Entity\Sql\SqlContentEntityStorage
    factory: 'entity_type.manager:getStorage'
    arguments: ['media']
  newfile_subscriber:
    class: \Drupal\yuki\Commands\EventSubscriber\NewFileSubscriber
    tags:
      - { name: 'event_subscriber' }
    calls:
      - method: setMediaStorage
        arguments:
          - "@yuki.media_storage"
  stream_wrapper.media:
    class: Drupal\yuki\StreamWrapper\MediaStream
    tags:
      - { name: stream_wrapper, scheme: media }
  yuki.path_processor.files:
    class: Drupal\yuki\PathProcessor\PathProcessorFiles
    tags:
      - { name: path_processor_inbound, priority: 200 }
  yuki.file_storage:
    class: \Drupal\file\FileStorage
    factory: 'entity_type.manager:getStorage'
    arguments: ['file']
  yuki.saver_chain:
    class: Drupal\yuki\File\Saver\FileSaverChain
  yuki.saver.song:
    class: Drupal\yuki\File\Saver\SongSaver
    tags:
      - { name: yuki.saver }
    calls:
      - method: setFileStorage
        arguments:
          - "@yuki.file_storage"
      - method: setFileExtensions
        arguments:
          - "%yuki.saver.song.extensions%"